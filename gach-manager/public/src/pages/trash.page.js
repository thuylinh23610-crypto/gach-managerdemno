(function(){
  GM_router.register('trash', renderTrashPage);
  
  function renderTrashPage(root){
    const stats = GM_trash.getStats();
    
    root.innerHTML = `
      <div class='page-head'>
        <h2>üóëÔ∏è Th√πng r√°c</h2>
        <div style='display:flex;gap:16px;align-items:center;'>
          <div class='stats-card' style='background:linear-gradient(135deg,#ef4444,#dc2626);color:white;padding:12px 20px;border-radius:8px;'>
            <span style='font-size:24px;font-weight:bold;'>${stats.total}</span>
            <span style='font-size:14px;opacity:0.9;'>Items</span>
          </div>
          ${stats.expiringSoon > 0 ? `
            <div class='stats-card' style='background:linear-gradient(135deg,#f59e0b,#d97706);color:white;padding:12px 20px;border-radius:8px;'>
              <span style='font-size:18px;font-weight:bold;'>${stats.expiringSoon}</span>
              <span style='font-size:12px;opacity:0.9;'>S·∫Øp h·∫øt h·∫°n</span>
            </div>
          ` : ''}
        </div>
      </div>
      
      <div class='card'>
        <div style='display:flex;justify-content:between;align-items:center;margin-bottom:20px;flex-wrap:wrap;gap:16px;'>
          <div style='flex:1;min-width:300px;'>
            <div style='position:relative;'>
              <input id='trash-search' class='input' placeholder='üîç T√¨m ki·∫øm trong th√πng r√°c...' style='padding-right:100px;' />
              <select id='type-filter' class='input' style='position:absolute;right:0;top:0;width:90px;border-left:1px solid var(--border);'>
                <option value=''>T·∫•t c·∫£</option>
                <option value='product'>S·∫£n ph·∫©m</option>
                <option value='customer'>Kh√°ch h√†ng</option>
                <option value='receipt'>Phi·∫øu</option>
              </select>
            </div>
          </div>
          
          <div style='display:flex;gap:12px;'>
            <button class='btn ghost' onclick='refreshTrash()' style='padding:8px 16px;'>üîÑ L√†m m·ªõi</button>
            <button class='btn danger' onclick='emptyTrash()' style='padding:8px 16px;' ${stats.total === 0 ? 'disabled' : ''}>üóëÔ∏è X√≥a t·∫•t c·∫£</button>
          </div>
        </div>
        
        <div style='background:#fef9c3;border:1px solid #f59e0b;border-radius:6px;padding:12px;margin-bottom:20px;'>
          <div style='display:flex;align-items:center;gap:8px;color:#92400e;'>
            <span style='font-size:18px;'>‚ö†Ô∏è</span>
            <div>
              <strong>L∆∞u √Ω:</strong> Items trong th√πng r√°c s·∫Ω t·ª± ƒë·ªông b·ªã x√≥a vƒ©nh vi·ªÖn sau <strong>14 ng√†y</strong>.
              <br><small>H√£y kh√¥i ph·ª•c nh·ªØng items quan tr·ªçng tr∆∞·ªõc khi h·∫øt h·∫°n.</small>
            </div>
          </div>
        </div>
        
        <div id='trash-content'>
          ${renderTrashContent()}
        </div>
      </div>
    `;
    
    // Event listeners
    document.getElementById('trash-search').addEventListener('input', filterTrash);
    document.getElementById('type-filter').addEventListener('change', filterTrash);
  }
  
  function renderTrashContent() {
    const items = GM_trash.list();
    
    if (items.length === 0) {
      return `
        <div style='text-align:center;padding:60px 20px;color:var(--text-light);'>
          <div style='font-size:64px;margin-bottom:16px;opacity:0.5;'>üóëÔ∏è</div>
          <h3 style='margin:0 0 8px 0;color:var(--text);'>Th√πng r√°c tr·ªëng</h3>
          <p style='margin:0;'>Ch∆∞a c√≥ items n√†o b·ªã x√≥a.</p>
        </div>
      `;
    }
    
    return `
      <div class='table-wrap'>
        <table class='table professional-table'>
          <thead>
            <tr style='background:linear-gradient(135deg,#6366f1,#4f46e5);color:white;'>
              <th style='padding:16px 12px;text-align:left;font-weight:600;'>üì¶ Item</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üè∑Ô∏è Lo·∫°i</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üìÖ X√≥a l√∫c</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>‚è∞ H·∫øt h·∫°n</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üé¨ Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            ${items.map((item, index) => renderTrashRow(item, index)).join('')}
          </tbody>
        </table>
      </div>
    `;
  }
  
  function renderTrashRow(item, index) {
    const data = item.data;
    const now = new Date();
    const expiresAt = new Date(item.expiresAt);
    const daysLeft = Math.ceil((expiresAt - now) / (1000 * 60 * 60 * 24));
    
    const isExpired = daysLeft <= 0;
    const isExpiringSoon = daysLeft <= 3 && daysLeft > 0;
    
    const rowBg = index % 2 === 0 ? '#ffffff' : '#f8fafc';
    
    // Determine display info based on type
    let displayName = '';
    let displayInfo = '';
    
    switch (item.type) {
      case 'product':
        displayName = data.name || data.code || 'S·∫£n ph·∫©m kh√¥ng t√™n';
        displayInfo = `M√£: ${data.code || 'N/A'}`;
        break;
      case 'customer':
        displayName = data.name || 'Kh√°ch h√†ng kh√¥ng t√™n';
        displayInfo = `SƒêT: ${data.phone || 'N/A'}`;
        break;
      case 'receipt':
        displayName = `Phi·∫øu ${data.receiptCode || data.receiptNumber || 'N/A'}`;
        displayInfo = `Kh√°ch: ${data.partnerName || data.transportUnit || 'N/A'}`;
        break;
      default:
        displayName = 'Item kh√¥ng x√°c ƒë·ªãnh';
        displayInfo = '';
    }
    
    const typeColors = {
      'product': '#3b82f6',
      'customer': '#10b981', 
      'receipt': '#f59e0b'
    };
    
    const typeNames = {
      'product': 'S·∫£n ph·∫©m',
      'customer': 'Kh√°ch h√†ng',
      'receipt': 'Phi·∫øu'
    };
    
    const expiryColor = isExpired ? '#dc2626' : isExpiringSoon ? '#f59e0b' : '#059669';
    const expiryText = isExpired ? 'ƒê√£ h·∫øt h·∫°n' : `${daysLeft} ng√†y`;
    
    return `
      <tr style='background:${rowBg};transition:all 0.2s;${isExpired ? 'opacity:0.6;' : ''}' 
          onmouseover='this.style.background="#e0f2fe";this.style.transform="translateY(-1px)"' 
          onmouseout='this.style.background="${rowBg}";this.style.transform="translateY(0)"'>
        
        <td style='padding:16px 12px;border:1px solid #e5e7eb;'>
          <div style='display:flex;align-items:center;gap:12px;'>
            <div style='width:40px;height:40px;border-radius:8px;background:${typeColors[item.type] || '#64748b'};display:flex;align-items:center;justify-content:center;color:white;font-weight:bold;font-size:14px;'>
              ${item.type.charAt(0).toUpperCase()}
            </div>
            <div>
              <div style='font-weight:600;color:#1e293b;margin-bottom:2px;'>${displayName}</div>
              <div style='font-size:13px;color:#64748b;'>${displayInfo}</div>
            </div>
          </div>
        </td>
        
        <td style='padding:16px 12px;border:1px solid #e5e7eb;text-align:center;'>
          <span style='background:${typeColors[item.type] || '#64748b'};color:white;padding:4px 12px;border-radius:20px;font-size:12px;font-weight:500;'>
            ${typeNames[item.type] || item.type}
          </span>
        </td>
        
        <td style='padding:16px 12px;border:1px solid #e5e7eb;text-align:center;color:#64748b;'>
          ${GM_utils.formatDate(item.deletedAt)}
        </td>
        
        <td style='padding:16px 12px;border:1px solid #e5e7eb;text-align:center;'>
          <span style='color:${expiryColor};font-weight:600;'>
            ${expiryText}
          </span>
        </td>
        
        <td style='padding:16px 12px;border:1px solid #e5e7eb;text-align:center;'>
          <div style='display:flex;gap:8px;justify-content:center;'>
            ${!isExpired ? `
              <button class='btn ghost' style='padding:6px 12px;font-size:12px;' onclick='restoreItem("${item.id}")' title='Kh√¥i ph·ª•c'>
                ‚Ü©Ô∏è Kh√¥i ph·ª•c
              </button>
            ` : ''}
            <button class='btn danger' style='padding:6px 12px;font-size:12px;' onclick='permanentDeleteItem("${item.id}")' title='X√≥a vƒ©nh vi·ªÖn'>
              üóëÔ∏è X√≥a
            </button>
            <button class='btn ghost' style='padding:6px 12px;font-size:12px;' onclick='viewTrashDetails("${item.id}")' title='Xem chi ti·∫øt'>
              üëÅÔ∏è
            </button>
          </div>
        </td>
      </tr>
    `;
  }
  
  // Filter trash items
  function filterTrash() {
    const searchQuery = document.getElementById('trash-search').value;
    const typeFilter = document.getElementById('type-filter').value;
    
    const filteredItems = GM_trash.search(searchQuery, typeFilter || null);
    
    const contentDiv = document.getElementById('trash-content');
    
    if (filteredItems.length === 0) {
      contentDiv.innerHTML = `
        <div style='text-align:center;padding:40px 20px;color:var(--text-light);'>
          <div style='font-size:48px;margin-bottom:16px;opacity:0.5;'>üîç</div>
          <h3 style='margin:0 0 8px 0;color:var(--text);'>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
          <p style='margin:0;'>Th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c b·ªô l·ªçc.</p>
        </div>
      `;
      return;
    }
    
    contentDiv.innerHTML = `
      <div class='table-wrap'>
        <table class='table professional-table'>
          <thead>
            <tr style='background:linear-gradient(135deg,#6366f1,#4f46e5);color:white;'>
              <th style='padding:16px 12px;text-align:left;font-weight:600;'>üì¶ Item</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üè∑Ô∏è Lo·∫°i</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üìÖ X√≥a l√∫c</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>‚è∞ H·∫øt h·∫°n</th>
              <th style='padding:16px 12px;text-align:center;font-weight:600;'>üé¨ Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            ${filteredItems.map((item, index) => renderTrashRow(item, index)).join('')}
          </tbody>
        </table>
      </div>
    `;
  }
  
  // Restore item from trash
  window.restoreItem = function(trashId) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën kh√¥i ph·ª•c item n√†y?')) return;
    
    try {
      const restoredItem = GM_trash.restore(trashId);
      GM_ui.toast('‚úÖ ƒê√£ kh√¥i ph·ª•c item th√†nh c√¥ng!');
      
      // Refresh trash view
      refreshTrash();
      
    } catch (error) {
      console.error('Restore error:', error);
      GM_ui.toast('‚ùå L·ªói kh√¥i ph·ª•c: ' + error.message);
    }
  };
  
  // Permanently delete item
  window.permanentDeleteItem = function(trashId) {
    if (!confirm('‚ö†Ô∏è C·∫¢NH B√ÅO: Item s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c. B·∫°n c√≥ ch·∫Øc ch·∫Øn?')) return;
    
    try {
      GM_trash.permanentDelete(trashId);
      GM_ui.toast('‚úÖ ƒê√£ x√≥a vƒ©nh vi·ªÖn item');
      
      // Refresh trash view
      refreshTrash();
      
    } catch (error) {
      console.error('Delete error:', error);
      GM_ui.toast('‚ùå L·ªói x√≥a item');
    }
  };
  
  // View trash item details
  window.viewTrashDetails = function(trashId) {
    const items = GM_trash.list();
    const item = items.find(i => i.id === trashId);
    
    if (!item) {
      GM_ui.toast('‚ùå Kh√¥ng t√¨m th·∫•y item');
      return;
    }
    
    const detailsHTML = `
      <div style='padding:20px;max-width:600px;'>
        <h3 style='margin:0 0 20px 0;color:var(--text);'>üóëÔ∏è Chi ti·∫øt item ƒë√£ x√≥a</h3>
        
        <div style='background:#f8fafc;padding:16px;border-radius:8px;margin-bottom:20px;'>
          <div style='display:grid;grid-template-columns:120px 1fr;gap:12px;align-items:center;'>
            <strong>Lo·∫°i:</strong> <span style='color:var(--primary);'>${item.type}</span>
            <strong>ID g·ªëc:</strong> <span>${item.originalId}</span>
            <strong>X√≥a l√∫c:</strong> <span>${GM_utils.formatDate(item.deletedAt)}</span>
            <strong>H·∫øt h·∫°n:</strong> <span>${GM_utils.formatDate(item.expiresAt)}</span>
          </div>
        </div>
        
        <h4 style='margin:0 0 12px 0;color:var(--text);'>üìÑ D·ªØ li·ªáu g·ªëc:</h4>
        <pre style='background:#f1f5f9;padding:16px;border-radius:6px;font-size:12px;overflow:auto;max-height:300px;border:1px solid #e2e8f0;'>${JSON.stringify(item.data, null, 2)}</pre>
        
        <div style='text-align:right;margin-top:20px;'>
          <button class='btn ghost' onclick='GM_ui.closeModal()'>ƒê√≥ng</button>
        </div>
      </div>
    `;
    
    GM_ui.modal(detailsHTML, { title: 'Chi ti·∫øt item ƒë√£ x√≥a', size: 'lg' });
  };
  
  // Empty entire trash
  window.emptyTrash = function() {
    const stats = GM_trash.getStats();
    
    if (stats.total === 0) {
      GM_ui.toast('‚ÑπÔ∏è Th√πng r√°c ƒë√£ tr·ªëng');
      return;
    }
    
    const confirmMessage = `‚ö†Ô∏è C·∫¢NH B√ÅO NGHI√äM TR·ªåNG:\n\nB·∫°n s·∫Øp x√≥a vƒ©nh vi·ªÖn T·∫§T C·∫¢ ${stats.total} items trong th√πng r√°c.\nH√†nh ƒë·ªông n√†y KH√îNG TH·ªÇ HO√ÄN T√ÅC!\n\nB·∫°n c√≥ TH·ª∞C S·ª∞ ch·∫Øc ch·∫Øn?`;
    
    if (!confirm(confirmMessage)) return;
    
    // Double confirm
    if (!confirm('X√°c nh·∫≠n l·∫ßn cu·ªëi: X√ìA T·∫§T C·∫¢ kh·ªèi th√πng r√°c?')) return;
    
    try {
      GM_trash.empty();
      GM_ui.toast('‚úÖ ƒê√£ l√†m tr·ªëng th√πng r√°c');
      
      // Refresh page
  GM_router.go('trash');
      
    } catch (error) {
      console.error('Empty trash error:', error);
      GM_ui.toast('‚ùå L·ªói l√†m tr·ªëng th√πng r√°c');
    }
  };
  
  // Refresh trash view
  window.refreshTrash = function() {
    // Auto cleanup expired items
    const removedCount = GM_trash.cleanupExpired();
    
    if (removedCount > 0) {
      GM_ui.toast(`üßπ ƒê√£ t·ª± ƒë·ªông x√≥a ${removedCount} items h·∫øt h·∫°n`);
    }
    
    // Refresh page
  GM_router.go('trash');
  };
  
})();